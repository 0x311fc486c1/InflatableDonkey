// Ahseya https://github.com/horrorho
// ItsASmallWorld https://github.com/ItsASmallWorld
// Partial CloudKit protobuf

option java_package = "com.github.horrorho.inflatabledonkey.protocol";
option java_outer_classname = "CloudKit";


// Appear to be more operations than message types.
// Possibly another abstraction layer in place.
// Requests converted to the appropriate Mxxx type.

message Request { // CKDPRequestOperation
  optional RequestOperationHeader requestOperationHeader = 1;
  optional Message message = 2;
  optional ZoneRetrieveRequest zoneRetrieveRequest = 201;
  optional RecordRetrieveRequest recordRetrieveRequest = 211;
  optional QueryRetrieveRequest queryRetrieveRequest = 220;
  // CKDPRequestOperation
  // ?     CKDPAssetUploadTokenRetrieveRequest * _assetUploadTokenRetrieveRequest;
  // ?     CKDPDeleteCommentRequest * _deleteCommentRequest;
  // ?     CKDPDeleteContainerRequest * _deleteContainerRequest;
  // ?     CKDPGetCommentRequest * _getCommentRequest;
  // ?     CKDPGetCommentsRequest * _getCommentsRequest;
  // ?     CKDPGetLikesRequest * _getLikesRequest;
  // ?     CKDPRequestOperationHeader * _header;
  // ?     CKDPLikeRequest * _likeRequest;
  // ?     CKDPMescalCertificateRequest * _mescalCertificateRequest;
  // ?     CKDPMescalSessionInfoRequest * _mescalSessionInfoRequest;
  // ?     CKDPMescalSignatureRequest * _mescalSignatureRequest;
  // ?     CKDPNotificationMarkReadRequest * _notificationMarkReadRequest;
  // ?     CKDPNotificationSyncRequest * _notificationSyncRequest;
  // ?     CKDPPkiRegisterRequest * _pkiRegisterRequest;
  // ?     CKDPPkiRetrieveRequest * _pkiRetrieveRequest;
  // ?     CKDPPostCommentRequest * _postCommentRequest;
  // ?     CKDPPromoteContainerSchemaRequest * _promoteContainerSchemaRequest;
  // ?     CKDPPulseRequest * _pulseRequest;
  // ?     CKDPQueryRetrieveRequest * _queryRetrieveRequest;
  // ?     CKDPRecordDeleteRequest * _recordDeleteRequest;
  // ?     CKDPRecordRetrieveChangesRequest * _recordRetrieveChangesRequest;
  // 211   CKDPRecordRetrieveRequest * _recordRetrieveRequest;
  // ?     CKDPRecordRetrieveVersionsRequest * _recordRetrieveVersionsRequest;
  // ?     CKDPRecordSaveRequest * _recordSaveRequest;
  // ?     CKDPOperation * _request;
  // ?     CKDPResetContainerRequest * _resetContainerRequest;
  // ?     CKDPSetBadgeCountRequest * _setBadgeCountRequest;
  // ?     CKDPShareAcceptRequest * _shareAcceptRequest;
  // ?     CKDPShareDeleteRequest * _shareDeleteRequest;
  // ?     CKDPShareRetrieveRequest * _shareRetrieveRequest;
  // ?     CKDPShareSaveRequest * _shareSaveRequest;
  // ?     CKDPShareTokenDeleteRequest * _shareTokenDeleteRequest;
  // ?     CKDPShareTokenRetrieveRequest * _shareTokenRetrieveRequest;
  // ?     CKDPShareTokenSaveRequest * _shareTokenSaveRequest;
  // ?     CKDPSubscriptionCreateRequest * _subscriptionCreateRequest;
  // ?     CKDPSubscriptionDeleteRequest * _subscriptionDeleteRequest;
  // ?     CKDPSubscriptionRetrieveRequest * _subscriptionRetrieveRequest;
  // ?     CKDPTokenRegistrationRequest * _tokenRegistrationRequest;
  // ?     CKDPTokenUnregistrationRequest * _tokenUnregistrationRequest;
  // ?     CKDPUnlikeRequest * _unlikeRequest;
  // ?     CKDPUserAvailableQuotaRequest * _userAvailableQuotaRequest;
  // ?     CKDPUserPrivacySettingsBatchLookupRequest * _userPrivacySettingsBatchLookupRequest;
  // ?     CKDPUserPrivacySettingsResetRequest * _userPrivacySettingsResetRequest;
  // ?     CKDPUserPrivacySettingsRetrieveRequest * _userPrivacySettingsRetrieveRequest;
  // ?     CKDPUserPrivacySettingsUpdateRequest * _userPrivacySettingsUpdateRequest;
  // ?     CKDPUserQueryRequest * _userQueryRequest;
  // ?     CKDPUserRetrieveRequest * _userRetrieveRequest;
  // ?     CKDPWebAuthTokenRetrieveRequest * _webAuthTokenRetrieveRequest;
  // ?     CKDPZoneDeleteRequest * _zoneDeleteRequest;
  // ?     CKDPZoneRetrieveChangesRequest * _zoneRetrieveChangesRequest;
  // 201     CKDPZoneRetrieveRequest * _zoneRetrieveRequest;
  // ?     CKDPZoneSaveRequest * _zoneSaveRequest;
}

message Response { // CKDPResponseOperation
  optional uint32 operationCost = 1;
  optional Message message = 2;
  optional ResponseOperationResult result = 3;
  optional ZoneRetrieveResponse zoneRetrieveResponse = 201;
  optional RecordRetrieveResponse recordRetrieveResponse = 211;
  optional QueryRetrieveRequestResponse queryRetrieveRequestResponse = 220;
}

message RequestOperationHeader {  // CKDPRequestOperationHeader
  optional string applicationContainer = 2;
  optional string applicationBundle = 3;
  optional Identifier deviceIdentifier = 7;
  optional string deviceSoftwareVersion = 8;
  optional string f9 = 9; // product type, TODO to String64
  optional string deviceLibraryName = 10; // Probably.
  optional string deviceLibraryVersion = 11; // Probably.
  optional string operation =12;
  optional uint64 deviceFlowControlBudget = 13; // Guesstimate.
  optional uint64 deviceFlowControlBudgetCap = 14; // Guesstimate.
  optional string deviceFlowControlKey = 15; // Guesstimate.
  optional Locale locale = 17;
  optional string version = 18; // Guesstimate.
  optional uint32 f19 = 19;
  optional string deviceAssignedName = 21;
  optional string deviceHardwareID = 22;
  optional uint32 f23 = 23;
  optional uint32 f25 = 25;


      //NSString * _applicationBundle;
  //unsigned long long  _applicationConfigVersion;
      //NSString * _applicationContainer;
  //int  _applicationContainerEnvironment;
  //NSString * _applicationVersion;
  //NSData * _clientChangeToken;
      //NSString * _deviceAssignedName;
      //unsigned long long  _deviceFlowControlBudget;
      //unsigned long long  _deviceFlowControlBudgetCap;
      //NSString * _deviceFlowControlKey;
  //float  _deviceFlowControlRegeneration;
      //NSString * _deviceHardwareID;
      //NSString * _deviceHardwareVersion;
      //CKDPIdentifier * _deviceIdentifier;
      //NSString * _deviceLibraryName;
      //NSString * _deviceLibraryVersion;
  //unsigned long long  _deviceProtocolVersion;
      //NSString * _deviceSoftwareVersion;
  //unsigned long long  _globalConfigVersion;
  //struct {
  //    unsigned int applicationConfigVersion : 1;
  //    unsigned int deviceFlowControlBudget : 1;
  //    unsigned int deviceFlowControlBudgetCap : 1;
  //    unsigned int deviceProtocolVersion : 1;
  //    unsigned int globalConfigVersion : 1;
  //    unsigned int applicationContainerEnvironment : 1;
  //    unsigned int deviceFlowControlRegeneration : 1;
  //    unsigned int isolationLevel : 1;
  //    unsigned int targetDatabase : 1;
  //}  _has;
  //int  _isolationLevel;
      //CKDPLocale * _locale;
  //NSString * _mmcsProtocolVersion;
  //int  _targetDatabase;
  //NSString * _userIDContainerID;
  //NSString * _userToken;

}

message Message {
  optional string uuid = 1;
  optional uint32 type = 2;
  optional uint32 f4 = 4;
}

message QueryRetrieveRequest {
  optional Query query = 1;
  optional RecordZoneIdentifier zoneIdentifier = 4;
  optional RequestedFields requestedFields = 5;
  optional UInt32 f6 = 6;

// CKDPQueryRetrieveRequest - M220
// ?6   NSData * _continuationMarker;
// ?   unsigned int  _limit;
// 1   CKDPQuery * _query;
// 5   CKDPRequestedFields * _requestedFields;
// 4   CKDPRecordZoneIdentifier * _zoneIdentifier;
}

message QueryRetrieveRequestResponse {
  optional QueryRetrieveRequestResponseQueryResult results = 1;

  // CKDPQueryRetrieveResponse - M220
  // ?  NSData * _continuationMarker;
  // 1  NSMutableArray * _queryResults;
}

message QueryRetrieveRequestResponseQueryResult {
  optional RecordIdentifier identifier = 1;
  optional uint32 type = 3;
  optional Record record = 4;

  // CKDPQueryRetrieveRequestResponseQueryResult
  // ?   NSString * _etag;
  // 1   CKDPRecordIdentifier * _identifier;
  // 4   CKDPRecord * _record;
  // 3?  int  _type;
}

message RecordRetrieveRequest {
  optional RecordIdentifier recordID = 1;
  optional UInt32 f6 = 6;

  // CKDPRecordRetrieveRequest - M211
  // ?  NSString * _clientVersionETag;
  // ?  CKDPRecordRetrieveRequestRetrieveAssetURL * _getAssetURL;
  // 1  CKDPRecordIdentifier * _recordIdentifier;
  // ?  CKDPRequestedFields * _requestedFields;
  // ?  NSString * _versionETag;
}

message RecordRetrieveResponse {
  optional Record record = 1;
  optional bool clientVersionETagMatch = 2;

  // CKDPRecordRetrieveResponse - M211
  // 2  BOOL  _clientVersionETagMatch;
  // 1  CKDPRecord * _record;
}

message RequestedFields {
  repeated string field = 1;

  // CKDPRequestedFields
  // 1  NSMutableArray * _fields;
}

message ResponseOperationResult { // CKDPResponseOperationResult
  optional uint32 code = 1;
  optional Error error = 2; // TODO CKDPResponseOperationResultError
}

message Error { // TODO expand to CKDPResponseOperationResultError
  optional UInt32 code = 1;
  optional string message = 4;
  optional string id = 5;
}

message DateStatistics {
  optional Date creation = 1;
  optional Date modification = 2;

  // CKDPDateStatistics
  // 1  CKDPDate * _creation;
  // 2  CKDPDate * _modification;
}

message Date {
  optional double time = 1;

  // CKDPDate
  // 1  double  _time;
}

message Identifier {
  optional string name = 1;
  optional uint32 type = 2;

  // CKDPIdentifier
  // 1  NSString * _name;
  // 2  int  _type;
}

message Locale { // CKDPLocale
  optional string languageCode = 1;
  optional string regionCode = 2;
  repeated string enabledKeyboard = 3;
  optional string activeKeyboard = 4;
}

message ProtectionInfo { // CKDPProtectionInfo
  optional bytes protectionInfo = 1;
  optional string protectionInfoTag  = 2;
}

message Query {
  repeated RecordType type = 1;
  repeated QueryFilter filter = 2;
  optional uint32 queryOperator = 4; // Or possibly  bool distinct

  // CKDPQuery
  // ?4  BOOL  _distinct;
  // 2   NSMutableArray * _filters;
  // 4?  int  _queryOperator;
  // ?   NSMutableArray * _sorts;
  // 1   NSMutableArray * _types;
}

message QueryFilter {
  optional RecordFieldIdentifier fieldName = 1;
  optional RecordFieldValue fieldValue = 2;
  optional uint32 type = 4;

  // CKDPQueryFilter
  // ?  CKDPLocationBound * _bounds;
  // 1  CKDPRecordFieldIdentifier * _fieldName;
  // 2  CKDPRecordFieldValue * _fieldValue;
  // 4  int  _type;
}

message Record {
  optional string etag= 1; // Probably
  optional RecordIdentifier RecordIdentifier = 2;
  optional RecordType type = 3;
  optional Identifier createdBy = 4; // Possibly 9
  optional DateStatistics timeStatistics = 5;
  repeated RecordField recordField = 7;
  optional Identifier modifiedBy = 9; // Possibly 4
  optional string modifiedByDevice = 11;
  optional ProtectionInfo protectionInfo = 13;
  optional uint32 permission = 15; // Probably.

  // CKDPRecord
  // ?    NSMutableArray * _conflictLoserEtags;
  // 4/9  CKDPIdentifier * _createdBy;
  // 2    NSString * _etag;
  // 7    NSMutableArray * _fields;
  // 9/4  CKDPIdentifier * _modifiedBy;
  // 11   NSString * _modifiedByDevice;
  // 15?  int  _permission;
  // ?    NSMutableArray * _pluginFields;
  // 13   CKDPProtectionInfo * _protectionInfo;
  // 2    CKDPRecordIdentifier * _recordIdentifier;
  // ?    CKDPShareIdentifier * _shareId;
  // 5    CKDPDateStatistics * _timeStatistics;
  // 3    CKDPRecordType * _type;
}

message RecordField { // CKDPRecordField.
  optional RecordFieldIdentifier id = 1;
  optional RecordFieldValue value = 2;
}

message RecordReference {
  optional uint32 type = 1;
  optional RecordIdentifier recordIdentifier = 2;

  // CKDPRecordReference.h
  // 2   CKDPRecordIdentifier * _recordIdentifier;
  // 1   int  _type;
}

message RecordFieldValue {
  optional uint32 type = 1;
  optional bytes bytesValue = 2;
  optional uint32 uint32 = 4;
  optional Date dateValue = 6; // Possibly
  optional string stringValue = 7;
  optional RecordReference referenceValue = 9;
  optional Asset assetValue = 10;
  repeated RecordFieldValue recordFieldValue = 11;

  // CKDPRecordFieldValue
  // 10  CKDPAsset * _assetValue;
  // 2   NSData * _bytesValue;
  // 6   CKDPDate * _dateValue;
  // ?   CKDPLocationCoordinate * _locationValue;
  // ?   CKDPPackage * _packageValue;
  // 9   CKDPRecordReference * _referenceValue;
  // ?   long long  _signedValue;
  // 7   NSString * _stringValue;
  // 1   int  _type;
}

message RecordType {
  optional string name = 1;

  // CKDPRecordType
  // 1 NSString * _name;
}

message RecordIdentifier {  // CKDPRecordIdentifier.
  optional Identifier value = 1;
  optional RecordZoneIdentifier zoneIdentifier = 2;
}

message RecordFieldIdentifier { // CKDPRecordFieldIdentifier.
  optional string name = 1;
}

message RecordZoneIdentifier { // CKDPRecordZoneIdentifier.
  optional Identifier value = 1;
  optional Identifier ownerIdentifier = 2;
}

message FileTokens {
  repeated FileToken fileTokens = 1;
}

message FileToken {
    optional bytes fileChecksum = 1;
    optional string token = 2;
    optional uint64 size = 3; // possibly file length
    optional bytes fileSignature = 4; // 90% certain of this

    // f1 f2 candidates
    // file checksum, file signature, sha256

}

message Asset { // TODO rename to file attribute or similar
  optional string dsPrsID = 1; // Or dsid
  optional bytes fileChecksum = 2;  // fileChecksum
  optional uint64 size = 4; // guesstimate
  optional string token = 5;
  optional string contentBaseURL = 8; // content url
  optional string dsid = 9; // Or dsPrsID
  repeated bytes f15 = 15; // 192 bit something or other
  optional bytes fileSignature = 17; // 90% certain of this
  optional uint64 timestamp = 18;

  // dsid/ dsPrsID order? does it really matter? are they not always the same???
  // candidates for unknowns
  // file checksum, sha256, file signature, encryption key,
}

message Fixed64Pair { // References?
  optional Fixed64 one = 1;
  optional Fixed64 two = 2;
}

message Fixed64 {  // Reference? Record_Response_211_1_7_2_11_6
  optional fixed64 value = 1;
}

message String32 {
  optional fixed32 value = 1;
}

message String64 {
  optional fixed64 value = 1;
}

message UInt32 {
  optional uint32 value = 1;
}


message ZoneRetrieveRequest {
  optional  RecordZoneIdentifier zoneIdentifier = 1;

  // CKDPZoneRetrieveRequest - M201
  // 1  CKDPRecordZoneIdentifier * _zoneIdentifier;
}

message ZoneRetrieveResponse {
  repeated ZoneRetrieveResponseZoneSummary zoneSummarys = 1;

  // CKDPZoneRetrieveResponse
  // 1  NSMutableArray * _zoneSummarys;
}

message ZoneRetrieveResponseZoneSummary {
  optional Zone targetZone = 1;

  // CKDPZoneRetrieveResponseZoneSummary
  // ?4 5 6  long long  _assetQuotaUsage;
  // ?2      NSData * _clientChangeToken;
  // ?2      NSData * _currentServerContinuationToken;
  // ?4 5 6  int  _deviceCount;
  // ?4 5 6  long long  _metadataQuotaUsage;
  // 1       CKDPZone * _targetZone;
}

message Zone {
  optional RecordZoneIdentifier zoneIdentifier = 1;
  optional ProtectionInfo protectionInfo = 3;

// CKDPZone
// ?2  NSString * _etag;
// 3   CKDPProtectionInfo * _protectionInfo;
// 1   CKDPRecordZoneIdentifier * _zoneIdentifier;
}





// fixed64 could be dates
// consider handle suffix for id + X
// can try passing malformed fields, the server sometimes returns an error giving us the field name
// naming conventions for boxed/ unboxed pairs
// probably missing repeated types
// naming is presently non-idiomatic
// responsebodies represent nested types, to refactor
// known message types: 200, 201, 202, 210, 211, 212, 213, 214, 220, 230, 240, 241, 242, 243, 300, 301, 302, 400, 800, 801, 802, 803, 804, 900, 901
